<?xml version="1.0" encoding="utf-8" ?>

<!--L
   Copyright SAIC
   Copyright SAIC-Frederick

   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/cananolab/LICENSE.txt for details.
L-->

<project name="cananolab" default="dist:all" basedir=".">
	<description>
	This is the master build file for the caNanoLab project.  caNanoLab web application, caNanoLab database, and caNanoLab grid service are three sub-projects
	</description>

	<!-- Property file related properties and tasks -->
	<property name="software.dir" location=".." />
	<property name="common.dir" location="${software.dir}/common" />
	<property name="target.dir" location="${software.dir}/target" />
	<property name="log.dir" location="${target.dir}/logs" />
	<property name="dist.dir" location="${target.dir}/dist" />
	<property name="temp.dir" location="${target.dir}/temp" />
	<property name="download.dir" location="${target.dir}/download" />

	<!-- Paths -->
	<path id="common.classpath">
		<fileset dir="${common.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="common.classpath" />

	<!--property name="tier" value="qa"/> -->
	<if>
		<isset property="tier" />
		<then>
			<!-- if tier is defined, load tier specific properties for tier based installation -->
			<property file="${tier}.properties" />
			<echo message="loaded ${tier} tier properties." />
		</then>
		<else>
			<property file="build.properties" />
			<echo message="loaded build.properties" />
		</else>
	</if>
	<property file="default.properties" />
	<property file="project.properties" />

	<!-- Properties that relate to how to call build targets from sub-projects-->
	<!-- Working directory passed to Ant tasks -->
	<property name="cananolab-webapp.base.dir" location="${software.dir}/cananolab-webapp" />
	<property name="cananolab-grid.base.dir" location="${software.dir}/cananolab-grid" />
	<property name="cananolab-db.base.dir" location="${software.dir}/cananolab-db" />

	<!-- Build file names relative working dir above, if the basedir of the sub-project ant script is ".." you should set the *.basdir to and the build file should include the dir and build file name from the *.base.dir -->
	<property name="cananolab-webapp.build.file" value="build.xml" />
	<property name="cananolab-grid.build.file" value="build.xml" />
	<property name="cananolab-db.build.file" value="build.xml" />

	<!-- The target name that should be called from the sub-project build file -->
	<property name="cananolab-webapp.build.target" value="war" />
	<property name="cananolab-grid.build.target" value="distWebApp" />

	<!-- Distribution Structure properties, used to copy files into the distribution area. -->
	<property name="dist.exploded.dir" location="${dist.dir}/exploded" />
	<property name="cananolab-webapp.dist.dir" location="${dist.exploded.dir}/cananolab-webapp" />
	<property name="cananolab-grid.dist.dir" location="${dist.exploded.dir}/cananolab-grid" />
	<property name="cananolab-db.dist.dir" location="${dist.exploded.dir}/cananolab-db" />
	<property name="common.dist.dir" location="${dist.exploded.dir}/common" />
	<property name="jboss-conf.dist.dir" location="${dist.exploded.dir}/jboss-conf" />
	<property name="cananolab-grid.temp.dir" location="${temp.dir}/cananolab-grid" />

	<condition property="application.base.path" value="${application.base.path.linux}">
		<or>
			<os family="unix" />
			<os family="mac" />
		</or>
	</condition>

	<condition property="application.base.path" value="${application.base.path.windows}">
		<os family="windows" />
	</condition>
	<echo message="application.base.path=${application.base.path}" />

	<!-- tools needed for cagrid -->
	<property name="cagrid-base-war.dest.file" value="${download.dir}/${cagrid-base-war.binaries.file}" />
	<property name="cagrid-libs.dest.file" value="${download.dir}/${cagrid-libs.binaries.file}" />
	<property name="ws-core.dest.file" value="${download.dir}/${ws-core.binaries.file}" />
	<available file="${cagrid-libs.dest.file}" property="cagrid-libs.tools.exists" />
	<available file="${cagrid-base-war.dest.file}" property="cagrid-base-war.tools.exists" />
	<available file="${ws-core.dest.file}" property="ws-core.tools.exists" />
	<available file="${application.base.path}/${ws-core.relative.dir}" property="ws-core.install.exists" />

	<target name="clean">
		<delete dir="${dist.dir}" />
		<delete dir="${temp.dir}" />
	</target>

	<!-- the init targets for the web application and database are handled by the subproject build files already-->
	<target name="initGrid" description="Sets up required directories for the grid service">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${temp.dir}" />
		<mkdir dir="${dist.exploded.dir}" />
		<mkdir dir="${cananolab-grid.dist.dir}" />
		<mkdir dir="${cananolab-db.dist.dir}" />
		<mkdir dir="${common.dist.dir}" />
		<mkdir dir="${download.dir}" />
	</target>

	<target name="build:all" description="Builds all the sub projects, putting artifacts in the project level target directory, used by distribution targets to make distributions" depends="clean, build:cananolab-webapp, build:cananolab-grid">
	</target>

	<target name="build:cananolab-webapp" description="Call webapp sub-project build target to produce build artifiacts">
		<!-- setting the property in the ant call overrides the property in the sub-project allowing the artifact to be produced where needed -->
		<ant antfile="${cananolab-webapp.build.file}" target="${cananolab-webapp.build.target}" dir="${cananolab-webapp.base.dir}">
			<!--overwrite distribution directory for the war file-->
			<property name="dist.dir" location="${cananolab-webapp.dist.dir}" />
		</ant>
	</target>

	<target name="dist:cananolab-webapp" description="Call webapp sub-project dist target to produce distribution artifacts">
		<ant antfile="${cananolab-webapp.build.file}" target="dist" dir="${cananolab-webapp.base.dir}">
			<property name="dist.dir" location="${cananolab-webapp.dist.dir}" />
		</ant>
	</target>

	<target name="deploy:cananolab-webapp">
		<ant antfile="${cananolab-webapp.build.file}" target="deploy" dir="${cananolab-webapp.base.dir}">
			<property name="dist.dir" location="${cananolab-webapp.dist.dir}" />
		</ant>
	</target>

	<!-- retrieve cagrid required tools from tech stack -->
	<target name="dist:tools:retrieve:cagrid-libs" unless="cagrid-libs.tools.exists" description="Downloads caGrid ws-core 4.0.3 libs from binary repository">
		<get src="${cagrid-libs.src.url}" dest="${cagrid-libs.dest.file}" />
		<get src="${cagrid-base-war.src.url}" dest="${cagrid-base-war.dest.file}" />
	</target>

	<target name="dist:tools:retrieve:cagrid-base-war" unless="cagrid-base-war.tools.exists" description="Downloads caGrid base war">
		<get src="${cagrid-base-war.src.url}" dest="${cagrid-base-war.dest.file}" />
	</target>

	<target name="install:ws-core" unless="env.GLOBUS_LOCATION">
		<echo message="environment variable GLOBUS_LOCATION not set, downloading and installing from ${ws-core.src.url}" />
		<if>
			<equals arg1="${ws-core.install.exists}" arg2="true" />
			<then>
				<echo message="${ws-core.relative.dir} has been installed at ${application.base.path}" />
			</then>
			<else>
				<antcall target="dist:tools:retrieve:ws-core" />
				<unzip dest="${application.base.path}" src="${ws-core.dest.file}" />
			</else>
		</if>
		<property name="env.GLOBUS_LOCATION" value="${application.base.path}/${ws-core.relative.dir}" />
	</target>

	<target name="dist:tools:retrieve:ws-core" unless="ws-core.tools.exists">
		<get src="${ws-core.src.url}" dest="${ws-core.dest.file}" />
		<get src="${ws-core.src.url}.MD5" dest="${ws-core.dest.file}.MD5" />
		<checksum file="${ws-core.dest.file}" verifyProperty="ws-core.cksum.ok" />
		<if>
			<equals arg1="${ws-core.cksum.ok}" arg2="true" />
			<then>
				<echo message="Downloaded wscore sucessfully" />
			</then>
			<else>
				<fail message="Failed to download wscore file sucessfully." />
			</else>
		</if>
	</target>

	<target name="build:cananolab-grid:webapp:jars">
		<!-- build the caNanoLab-helpers.jar -->
		<ant antfile="${cananolab-webapp.build.file}" target="jar:helpers" dir="${cananolab-webapp.base.dir}">
			<property name="dist.dir" location="${cananolab-webapp.dist.dir}" />
		</ant>
		<!-- build the caNanoLabSDK-orm.jar -->
		<ant antfile="${cananolab-webapp.build.file}" target="jar:orm" dir="${cananolab-webapp.base.dir}">
			<property name="dist.dir" location="${cananolab-webapp.dist.dir}" />
		</ant>
	</target>

	<target name="build:cananolab-grid" depends="initGrid, build:cananolab-grid:webapp:jars, dist:tools:retrieve:cagrid-libs, dist:tools:retrieve:cagrid-base-war, install:ws-core" description="Call grid sub-project build target to produce artifiacts">
		<!--unpack base globus wsrf war into wsrf-canano.war directory -->
		<unzip dest="${cananolab-grid.temp.dir}" src="${cagrid-base-war.dest.file}" />

		<ant inheritAll="false" inheritRefs="false" antfile="${cananolab-grid.build.file}" target="clean" dir="${cananolab-grid.base.dir}">
		</ant>
		<!-- setting the property in the ant call overerides the property in the sub-project allowing the artifact to be produced where needed -->
		<ant inheritAll="false" inheritRefs="false" antfile="${cananolab-grid.build.file}" target="${cananolab-grid.build.target}" dir="${cananolab-grid.base.dir}">
			<property name="dist.dir" value="${cananolab-grid.temp.dir}" />
			<property name="env.GLOBUS_LOCATION" value="${env.GLOBUS_LOCATION}" />
		</ant>
		<antcall target="build:cananolab-grid:properties" />
		<!-- repackage grid WAR file -->
		<mkdir dir="${cananolab-grid.dist.dir}" />
		<jar destfile="${cananolab-grid.dist.dir}/wsrf-canano.war" basedir="${cananolab-grid.temp.dir}" />
	</target>

	<!-- replace generic tokens with properties -->
	<target name="build:cananolab-grid:properties">
		<copy overwrite="true" todir="${temp.dir}" filtering="true">
			<fileset dir="${common.dir}/resources/hibernate">
				<include name="*.xml" />
			</fileset>
			<filterset id="db.filterset">
				<filter token="database.url" value="${database.url}" />
				<filter token="database.user" value="${database.user}" />
				<filter token="database.password" value="${database.password}" />
			</filterset>
		</copy>

		<!-- replace hibernate.cfg.xml in caNanoLabSDK-orm.jar -->
		<jar update="true" destfile="${cananolab-grid.temp.dir}/WEB-INF/lib/caNanoLabSDK-orm.jar">
			<zipfileset src="${cananolab-grid.temp.dir}/WEB-INF/lib/caNanoLabSDK-orm.jar" excludes="hibernate.cfg.xml" />
			<fileset dir="${temp.dir}">
				<include name="hibernate.cfg.xml" />
			</fileset>
		</jar>

		<!-- replace caNanoLab.csm.new.hibernate.cfg.xml in caNanoLabSDK-customConfig.jar -->
		<jar update="true" destfile="${cananolab-grid.temp.dir}/WEB-INF/lib/caNanoLabSDK-customConfig.jar">
			<zipfileset src="${cananolab-grid.temp.dir}/WEB-INF/lib/caNanoLabSDK-customConfig.jar" excludes="caNanoLab.csm.new.hibernate.cfg.xml" />
			<fileset dir="${temp.dir}">
				<include name="caNanoLab.csm.new.hibernate.cfg.xml" />
			</fileset>
		</jar>

		<!-- replace downloaded server-config.wsdd with the one that has logicalHost parameter -->
		<copy overwrite="true" tofile="${cananolab-grid.temp.dir}/WEB-INF/etc/globus_wsrf_core/server-config.wsdd" file="${common.dir}/resources/jboss-conf/server-config.wsdd" />
		<!-- replace grid service hostname -->
		<replace file="${cananolab-grid.temp.dir}/WEB-INF/etc/globus_wsrf_core/server-config.wsdd" token="GRID_SERVICE_HOSTNAME" value="${grid.service.hostname}" />
		<!-- replace grid service port -->
		<replace file="${cananolab-grid.temp.dir}/WEB-INF/web.xml" token=">8080" value=">${grid.service.port}" />
		<!-- replace grid service protocol -->
		<replace file="${cananolab-grid.temp.dir}/WEB-INF/web.xml" token=">http" value=">${grid.service.protocol}" />
		<!-- replace grid web app name -->
		<replace file="${cananolab-grid.temp.dir}/WEB-INF/web.xml" token=">wsrf" value=">wsrf-canano" />
		<!-- replace grid index service URL -->
		<replace file="${cananolab-grid.temp.dir}/WEB-INF/etc/cagrid_${grid.service.name}/${grid.service.name}_registration.xml" token="GRID_INDEX_SERVER" value="${grid.indexserver}" />

		<!-- replace grid service metadata -->
		<replace file="${cananolab-grid.temp.dir}/WEB-INF/etc/cagrid_${grid.service.name}/serviceMetadata.xml">
			<replacefilter token="APPOWNER" value="${application.owner}" />
			<replacefilter token="YOUR_COUNTRY" value="${country}" />
			<replacefilter token="YOUR_STATE" value="${state}" />
			<replacefilter token="YOUR_CITY" value="${city}" />
			<replacefilter token="YOUR_ZIP" value="${zipcode}" />
			<replacefilter token="YOUR_STREET1" value="${street1}" />
			<replacefilter token="YOUR_STREET2" value="${street2}" />
			<replacefilter token="YOUR_AFFILIATION" value="${affiliation}" />
			<replacefilter token="YOUR_EMAIL" value="${email}" />
			<replacefilter token="YOUR_PHONE" value="${phone}" />
			<replacefilter token="FIRSTNAME" value="${first.name}" />
			<replacefilter token="LASTNAME" value="${last.name}" />
		</replace>
	</target>

	<target name="dist:cananolab-grid" depends="build:cananolab-grid">
		<!-- unpack required globus libraries for JBoss -->
		<unzip dest="${common.dist.dir}" src="${cagrid-libs.dest.file}">
			<patternset>
				<exclude name="log4j*.jar" />
			</patternset>
		</unzip>
	</target>

	<target name="deploy:cananolab-grid" depends="dist:cananolab-grid">
		<!-- deploy WAR to JBOSS deploy direction -->
		<copy todir="${jboss.deploy.dir}" overwrite="true">
			<fileset dir="${cananolab-grid.dist.dir}">
				<include name="wsrf-canano.war" />
			</fileset>
		</copy>
		<!-- copy globus libs to JBoss lib direction -->
		<copy todir="${jboss.lib.dir}" overwrite="true">
			<fileset dir="${common.dist.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="install:new:cananolab-db">
		<ant antfile="${cananolab-db.build.file}" target="install:new" dir="${cananolab-db.base.dir}">
			<property name="dist.dir" location="${cananolab-db.dist.dir}" />
		</ant>
	</target>

	<target name="update:cananolab-db">
		<ant antfile="${cananolab-db.build.file}" target="sync:update" dir="${cananolab-db.base.dir}">
			<property name="dist.dir" location="${cananolab-db.dist.dir}" />
		</ant>
	</target>

	<target name="update:cananolab-db:ldap:upt:superadmin">
		<ant antfile="${cananolab-db.build.file}" target="update:ldap:upt:superadmin" dir="${cananolab-db.base.dir}">
			<property name="dist.dir" location="${cananolab-db.dist.dir}" />
		</ant>
	</target>

	<target name="dist:all" description="Builds all the sub projects, putting artifacts in the project level target directory, and distribute targets to make distributions" depends="clean, dist:cananolab-webapp, dist:cananolab-grid">
	</target>
</project>
